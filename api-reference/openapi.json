{
  "openapi": "3.0.0",
  "info": {
    "title": "NeuFlow API",
    "description": "APIs to manage Flows within the NeuFlow API Service.",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.neuflow.org"
    }
  ],
  "paths": {
    "/v1/flows/{flowId}/executions": {
      "post": {
        "summary": "Start execution of a flow",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Initiates an execution of the specified flow using provided input parameters.",
        "operationId": "startExecution",
        "tags": [
          "FlowExecution"
        ],
        "parameters": [
          {
            "name": "flowId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the flow to execute.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowExecutionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful execution response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowExecutionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, Rate limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "FlowExecutionRequest": {
        "type": "object",
        "required": [
          "flowVersion",
          "input"
        ],
        "properties": {
          "input": {
            "type": "object",
            "description": "JSON object containing input data for the flow",
            "additionalProperties": true
          },
          "flowVersion": {
            "type": "string",
            "description": "Flow version"
          }
        }
      },
      "FlowExecutionResponse": {
        "type": "object",
        "properties": {
          "executionId": {
            "type": "string",
            "description": "Unique identifier for the flow execution"
          },
          "createdAt": {
            "type": "string",
            "description": "Timestamp of when the execution was initiated"
          },
          "result": {
            "type": "string",
            "description": "JSON object containing the result of the execution"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Error code"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "description": "API key sent by the user for invoking APIs like execute flow etc.",
        "in": "header",
        "name": "X-API-Key"
      }
    }
  }
}
